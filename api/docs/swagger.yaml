definitions:
  models.ErrorResponse:
    properties:
      error:
        description: Detailed error message (optional)
        type: string
      fields:
        additionalProperties:
          type: string
        description: Field-specific errors (optional)
        type: object
      message:
        description: A brief message explaining the error
        type: string
      status:
        description: HTTP status code
        type: integer
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.SuccessResponce:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  models.UpdatePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.UpdateUserProfile:
    properties:
      full_name:
        type: string
      password_hash:
        type: string
      phone_number:
        type: string
      username:
        type: string
    type: object
  models.UserProfile:
    properties:
      full_name:
        type: string
      id:
        type: string
      phone_number:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  models.UserRegisterRequst:
    properties:
      full_name:
        type: string
      id:
        type: string
      password:
        type: string
      phone_number:
        type: string
      username:
        type: string
    type: object
  models.UserRegisterResponce:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is a user service.
  title: API Gateway
  version: "1.0"
paths:
  /users/delete:
    delete:
      description: This endpoint deletes a user by their ID
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a user
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: This endpoint allows a user to log in by providing login credentials
      parameters:
      - description: Login Request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: User login
      tags:
      - auth
  /users/password:
    put:
      consumes:
      - application/json
      description: This endpoint updates the user's password
      parameters:
      - description: Update Password Request
        in: body
        name: updatePass
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update password
      tags:
      - users
  /users/profile:
    get:
      description: This endpoint retrieves the user profile by their ID
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get user profile
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: This endpoint registers a new user with provided details
      parameters:
      - description: User Register Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterRequst'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserRegisterResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /users/update:
    put:
      consumes:
      - application/json
      description: This endpoint updates user profile details
      parameters:
      - description: User Profile
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponce'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update user profile
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
